1.	Imagine you’re having a conversation with a future colleague about whether to use the iPython Shell 
instead of Python’s default shell. What reasons would you give to explain the benefits of using the iPython 
Shell over the default one?
    - The Ipython shell shows code in different colors, which make it easier to read compared to the default Python shell
    - In Ipython, it automatically indents your code for nested parts.  This is especially helpful for a beginner like myself.
    - IPython has a tab completion feature which helps finish wirting a variable.  This was especially helpful when writing multiple
      recipes with the same format.
    - Each command can be tested right away, which makes it easy to catch errors quickly

2.	Python has a host of different data types that allow you to store and organize information. List 4 examples 
of data types that Python recognizes, briefly define them, and indicate whether they are scalar or non-scalar.

Data Type: Integer(int)
Definition: Whole Numbers, either positive or negative without any decimal points (ex/ -10 and 24)         
Scalar or Non Scaler: Scalar

Data Type: Float
Definition: Floats represent decimal numbers like 3.14 and -0.05      
Scalar or Non Scaler: Scalar

Data Type: String (str)
Definition: A sring of characters (numbers or letters) enclosed in quotes.  They also include spaces and symbols.  (ex/ "Hello, how are you?")   
Scalar or Non Scaler: Non-Scaler

Data Type: List
Definition: Lists are ordered collections and/or values of items enclosed between square brackets and separated by commas (ex/ [1, 2, 3])        
Scalar or Non Scaler:  Non-Scaler


3.	A frequent question at job interviews for Python developers is: what is the difference between lists and tuples
 in Python? Write down how you would respond.
  - Elements within a list can be edited/updated afer its been created, where as with Tuples once its been defined it cannot
    be changed
  - Along those same lines, lists are used for collections of similar items where the elements may change, where are Tuples are 
    for fixed collections that do not need to be changed.
  - Lists use square brackets [] whiel Tuples use parentheses ()
		
4.	In the task for this Exercise, you decided what you thought was the most suitable data structure for storing 
all the information for a recipe. Now, imagine you’re creating a language-learning app that helps users memorize 
vocabulary through flashcards. Users can input vocabulary words, definitions, and their category (noun, verb, etc.) 
into the flashcards. They can then quiz themselves by flipping through the flashcards. Think about the necessary data 
types and what would be the most suitable data structure for this language-learning app. Between tuples, lists, and 
dictionaries, which would you choose? Think about their respective advantages and limitations, and where flexibility 
might be useful if you were to continue developing the language-learning app beyond vocabulary memorization. 	

- Tuples are immutable, so once they are created their values cannot be changed so this would not be the best option for
this app because users might want to edit or update the information and wouldn't be able to.

- Lists are a better option it would be easy to store each flashcard's sublist with word and definition.

- However, I think dictionaries would be the most suitable choice because of the key-value pairs.  The key could be the word
and the value be the definition.  This would make it easier to search and/or update.
		
		
